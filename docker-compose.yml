version: "3"

services:

  db:
    container_name: recognition_db
    image: postgres:13
    environment:
      - POSTGRES_DB=recognition_postgres_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=SecurityPassword
    volumes:
      - db_data:/var/lib/postgresql/data
      - db_backups:/backups
    ports:
      - "6789:5432"

  mongodb:
    container_name: recognition_mongodb
    image: mongo
    volumes:
      - mongo_init:/docker-entrypoint-initdb.d
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongoadmin
      MONGO_INITDB_DATABASE: recognition
    ports:
      - "27017:27017"
    command:
      - '--logpath'
      - '/var/log/mongodb/mongod.log'

  mosquitto:
    image: eclipse-mosquitto
    container_name: recognition_mosquitto
    expose:
      - 1883
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./config:/mosquitto/config
      - ./data:/mosquitto/data:rw
      - ./log:/mosquitto/log:rw

  rabbitmq:
    container_name: recognition_rabbitmq
    image: rabbitmq:3-management-alpine
    env_file: "./docker/environments"
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbit_mq_data:/var/lib/rabbitmq

  django:
    container_name: recognition_django
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
      - ./docker:/docker
    env_file: "./docker/environments"
    environment:
      - WAITING_HOST=db
      - WAITING_PORT=5432
    depends_on:
      - db
      - rabbitmq

  mosquitto_listener:
    build:
      context: .
    container_name: recognition_mosquitto_listener
    command: "python listeners/mosquitto_listener.py"
    restart: on-failure
    env_file: "./docker/environments"
    volumes:
      - ./app:/app
      - ./docker:/docker

  celery:
    container_name: recognition_celery
    build:
      context: .
    command: 'celery -A settings worker -l info --concurrency=4 -B'
    env_file: "./docker/environments"
    volumes:
      - ./app:/app
      - ./docker:/docker
    links:
      - db
      - rabbitmq
    depends_on:
      - db
      - rabbitmq

  flower:
    container_name: recognition_flower
    image: mher/flower:0.9.5
    env_file: "./docker/environments"
    ports:
      - 8886:8886
    depends_on:
      - celery

  recognition_nginx:
    image: nginx:latest
    container_name: recognition_nginx
    ports:
      - "80:80"
    depends_on:
      - django
    volumes:
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf

volumes:
  db_data:
  db_backups:
  rabbit_mq_data:
  nginx:
  mongo_init:
  mongo_data: